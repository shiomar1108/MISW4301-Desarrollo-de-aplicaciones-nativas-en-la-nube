version: '3'
services:
  users_db:
    container_name: users_db
    image: postgres:14.1-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: usersdb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    restart: always
    networks:
      - user_net   
  
  users:
    container_name: users
    build: 
      context: ./users
      dockerfile: Dockerfile
      target: prod
    ports:
      - "3000:3000"
    environment:
      DB_NAME: usersdb
      DB_HOST: users_db
      DB_PORT: 5432
      DB_USER: admin
      DB_PASSWORD: admin
    restart: always
    networks:
      - user_net 
      - app_net
    depends_on:
      - users_db
  
  posts_db:
    container_name: posts_db  
    image: postgres:14.1-alpine
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: postsdb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    restart: always
    networks:
      - post_net

  posts:
    container_name: posts
    build: 
      context: ./posts
      dockerfile: Dockerfile
      target: prod
    ports:
      - "3001:3000"
    environment:
      DB_NAME: postsdb
      DB_HOST: posts_db
      DB_PORT: 5432
      DB_USER: admin
      DB_PASSWORD: admin
      USERS_PATH: "http://users:3000"
    restart: always
    networks:
      - post_net 
      - app_net
    depends_on:
      - posts_db
      - users 

  routes_db:    
    container_name: routes_db
    image: postgres:14.1-alpine
    ports:
      - "5434:5432"
    environment:
      POSTGRES_DB: routesdb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin  
    restart: always
    networks:
      - route_net
  
  routes:
    container_name: routes
    build: 
      context: ./routes
      dockerfile: Dockerfile
      target: prod     
    environment:
      DB_NAME: routesdb
      DB_HOST: routes_db
      DB_PORT: 5432
      DB_USER: admin
      DB_PASSWORD: admin
      USERS_PATH: "http://users:3000"
    ports:
      - "3002:3000"
    restart: always      
    networks:
      - route_net
      - app_net      
    depends_on:
      - routes_db
      - users       
  
  offers_db:
    container_name: offers_db  
    image: postgres:14.1-alpine
    ports:
      - "5435:5432"
    environment:
      POSTGRES_DB: offersdb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    restart: always
    networks:
      - offer_net 

  offers:
    container_name: offers
    build: 
      context: ./offers
      dockerfile: Dockerfile
      target: prod
    ports:
      - "3003:3000"
    environment:
      DB_NAME: offersdb
      DB_HOST: offers_db
      DB_PORT: 5432
      DB_USER: admin
      DB_PASSWORD: admin
      USERS_PATH: "http://users:3000"
    restart: always
    networks:
      - offer_net
      - app_net
    depends_on:
      - offers_db
      - users
      - routes

  rf005:
    container_name: rf005
    build: 
      context: ./rf005
      dockerfile: Dockerfile
      target: prod
    ports:
      - "3007:3000"
    environment:      
      ROUTES_PATH: "http://routes:3000"
      OFFERS_PATH: "http://offers:3000"
      USERS_PATH: "http://users:3000"
      POSTS_PATH:  "http://posts:3000"
      SCORES_PATH: "http://scores:3000"
    restart: always
    networks:
      - rf005_net
      - route_net
      - offer_net
      - app_net
    depends_on:
      - users
      - offers
      - routes

  rf004:
    container_name: rf004
    build: 
      context: ./rf004
      dockerfile: Dockerfile
      target: prod
    ports:
      - "3006:3000"
    environment:
      USERS_PATH: "http://users:3000"
      POSTS_PATH: "http://posts:3000"
      OFFERS_PATH: "http://offers:3000"
      ROUTES_PATH: "http://routes:3000"      
      SCORES_PATH: "http://scores:3000"
    restart: always
    networks:
      - app_net
    depends_on:
      - posts
      - offers
      - routes
      - users
      - scores

  rf003:
    container_name: rf003
    build: 
      context: ./rf003
      dockerfile: Dockerfile
      target: prod
    ports:
      - "3005:3000"
    environment:      
      ROUTES_PATH: "http://routes:3000"
      USERS_PATH: "http://users:3000"
      POSTS_PATH: "http://posts:3000"
    restart: always
    networks:
      - app_net
    depends_on:
      - users
      - posts
      - routes

  scores_db:
    container_name: scores_db
    image: postgres:14.1-alpine
    ports:
      - "5436:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: PgNube202314
    restart: always
    networks:
      - app_net   
  
  scores:
    container_name: scores
    build: 
      context: ./scores
      dockerfile: Dockerfile
      target: prod
    ports:
      - "3004:3000"
    environment:
      DB_NAME: postgres
      DB_HOST: scores_db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: PgNube202314
    restart: always
    networks:
      - app_net
    depends_on:
      - scores_db

networks:
  app_net:
    driver: bridge
  user_net:
    driver: bridge
  offer_net:
    driver: bridge
  route_net:
    driver: bridge    
  post_net:
    driver: bridge
  rf005_net:
    driver: bridge